{"meta":{"title":"不知所措 | 才是人生","subtitle":"","description":"这是一个学习、记录前端知识的博客网站，包括前端的HTML、CSS、JavaScript、vue、react、微信小程序、nodejs，欢迎大家一起学习！！！","author":"小七","url":"https://lin2019.github.io","root":"/"},"pages":[{"title":"404 Not Found","date":"2020-05-31T04:38:30.026Z","updated":"2020-05-31T04:38:30.025Z","comments":true,"path":"404/index.html","permalink":"https://lin2019.github.io/404/index.html","excerpt":"","text":"404很抱歉，您访问的页面不存在可能是输入地址有误或该地址已被删除"},{"title":"blog","date":"2020-05-30T15:01:43.000Z","updated":"2020-05-30T15:01:43.477Z","comments":true,"path":"blog/index.html","permalink":"https://lin2019.github.io/blog/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2020-05-30T15:18:19.788Z","updated":"2020-05-30T15:18:19.788Z","comments":true,"path":"categories/index.html","permalink":"https://lin2019.github.io/categories/index.html","excerpt":"","text":""},{"title":"关于","date":"2020-05-31T13:59:53.425Z","updated":"2020-05-31T13:59:53.425Z","comments":true,"path":"about/index.html","permalink":"https://lin2019.github.io/about/index.html","excerpt":"","text":"Hi 我是星仔&nbsp;&nbsp;&nbsp;&nbsp;Hi，我是星仔，一枚前端工程师，虽然还是前端小白，也在慢慢蜕变；平时兴趣爱好不多，喜欢看的动漫有海贼王、火影忍者，喜欢的体育是篮球，偶尔也会看看NBA（有没有虎扑JRS呢，暗号：他强任他强？），喜欢听歌看电影。梦想不大，希望自己努力，过自己想过的生活。&nbsp;&nbsp;&nbsp;&nbsp;这是我的个人博客，记录着每个成长的瞬间，和陌生的你一起进步，当然，你也可以在其它地方找到我，掘金、简书 。&nbsp;&nbsp;&nbsp;&nbsp;人生就是这样，充满了未知和挑战，你无法预知未来，那就从现在出发，不要畏惧选择，不知所措才是人生！PART ONEVUEJS微信小程序webpackreactPART TWOtypescriptnodejsPART THREEawaiting ..."},{"title":"home","date":"2020-05-30T15:01:17.000Z","updated":"2020-05-30T16:20:03.061Z","comments":true,"path":"home/index.html","permalink":"https://lin2019.github.io/home/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2020-05-30T16:00:27.164Z","updated":"2020-05-30T16:00:27.164Z","comments":true,"path":"tags/index.html","permalink":"https://lin2019.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"JavaScript之防抖和节流","slug":"JavaScript之防抖和节流","date":"2020-06-07T07:53:03.000Z","updated":"2020-06-07T09:46:03.574Z","comments":true,"path":"2020/06/07/JavaScript之防抖和节流/","link":"","permalink":"https://lin2019.github.io/2020/06/07/JavaScript%E4%B9%8B%E9%98%B2%E6%8A%96%E5%92%8C%E8%8A%82%E6%B5%81/","excerpt":"&nbsp;&nbsp;&nbsp;&nbsp;前端开发过程中，往往碰到一些频繁触发的场景，如输入框关键字搜索、滚动条的滚动、按钮多次提交、鼠标事件等等，往往会加重浏览器的负担、影响用户体验、触发一些额外问题等等，如果对这些频繁的操作做一定限制就可以减少事件的触发，又不影响效果，所以有了防抖和节流两种方式。","text":"&nbsp;&nbsp;&nbsp;&nbsp;前端开发过程中，往往碰到一些频繁触发的场景，如输入框关键字搜索、滚动条的滚动、按钮多次提交、鼠标事件等等，往往会加重浏览器的负担、影响用户体验、触发一些额外问题等等，如果对这些频繁的操作做一定限制就可以减少事件的触发，又不影响效果，所以有了防抖和节流两种方式。1、防抖&nbsp;&nbsp;&nbsp;&nbsp;防抖，意思就是，在一定的时间内触发一次，如果在这段时间内又触发了事件，那么重新计算时间，直至时间内没触发。以下是对浏览器滚动条的滚动事件的处理：123456789101112131415161718function debounce(fn,time) &#123; var timer; return function() &#123; &#x2F;&#x2F; context,args作用为了让handleScroll能接收到event，还有this指向不变 var context &#x3D; this; var args &#x3D; arguments; if (timer) clearTimeout(timer) timer &#x3D; setTimeout(() &#x3D;&gt; &#123; fn.apply(context,args) &#125;,time) &#125;&#125;function handleScroll(e) &#123; console.log(&#39;scroll...&#39;)&#125;window.addEventListener(&#39;scroll&#39;,debounce(handleScroll,1000))2、节流&nbsp;&nbsp;&nbsp;&nbsp;节流，意识是，如果持续触发事件，那么每隔一段时间触发一次。节流有两种实现方法，一种定时器，另一种时间戳。12345678910111213141516171819function throttle(fn,time) &#123; var timer; return function() &#123; var context &#x3D; this; var args &#x3D; arguments; if(!timer) &#123; timer &#x3D; setTimeout(() &#x3D;&gt; &#123; fn.apply(context, args); timer &#x3D; null; &#125;,time) &#125; &#125;&#125;function handleScroll(e) &#123; console.log(&#39;scroll...&#39;)&#125;window.addEventListener(&#39;scroll&#39;,throttle(handleScroll,1000))123456789101112131415161718function throttle(fn,time) &#123; var before &#x3D; 0 return function() &#123; var context &#x3D; this; var args &#x3D; arguments; var now &#x3D; Date.now() if (now - before &gt;&#x3D; time) &#123; fn.apply(context,args) before &#x3D; now &#125; &#125;&#125;function handleScroll(e) &#123; console.log(&#39;scroll...&#39;)&#125;window.addEventListener(&#39;scroll&#39;,throttle(handleScroll,1000))&nbsp;&nbsp;&nbsp;&nbsp;以上就是JavaScript中的防抖和节流的原理和实现。","categories":[{"name":"前端","slug":"前端","permalink":"https://lin2019.github.io/categories/%E5%89%8D%E7%AB%AF/"},{"name":"JavaScript","slug":"前端/JavaScript","permalink":"https://lin2019.github.io/categories/%E5%89%8D%E7%AB%AF/JavaScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://lin2019.github.io/tags/JavaScript/"}]},{"title":"JavaScript正则表达语法一览","slug":"JavaScript正则表达语法一览","date":"2020-06-04T16:00:53.000Z","updated":"2020-06-07T09:29:44.059Z","comments":true,"path":"2020/06/05/JavaScript正则表达语法一览/","link":"","permalink":"https://lin2019.github.io/2020/06/05/JavaScript%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E8%AF%AD%E6%B3%95%E4%B8%80%E8%A7%88/","excerpt":"","text":"1、创建正则表达式12var reg = /ab+c/var re = new RegExp('ab+c')2、特殊字符特殊符号作用^匹配输入的开始$匹配输入的结束*匹配0次或多次+匹配1次或多次?匹配0次或1次.匹配除换行符的任何单个字符a|b匹配a或b{n}n是正整数，匹配字符n次{n,}n是正整数,匹配至少n次{n,m}n,m都是整数，匹配字符至少n次，最多m次，n，m为0忽略[xyz]匹配字符集中任意符号[^xyz]匹配任何不在字符集的符号\\b匹配一个词的边界\\d匹配一个数字，等价于[0-9]\\D匹配一个非数字，等价于[^0-9]\\n匹配一个换行符\\w匹配一个单字字符，等价于[A-Za-z0-9_]\\W匹配一个非单字字符，等价于[^A-Za-z0-9_]\\s匹配一个空白字符，包括空格、制表符、换页符和换行符\\S匹配一个非空白字符\\t匹配一个水平制表符\\v匹配一个垂直制表符\\f匹配一个换页符\\r匹配一个回车符3、方法方法作用exce字符串查找匹配RegExp方法，返回数组，未匹配返回nulltest字符串测试是否匹配RegExp方法，返回true或falsematchmatchAllsearch查找匹配项索引值，没有-1replace替换匹配项split4、搜索标志作用g全局搜索i不区分大小写m多行搜索s允许.匹配换行符uunicode码匹配y执行“粘性(sticky)”搜索,匹配从目标字符串的当前位置开始","categories":[{"name":"前端","slug":"前端","permalink":"https://lin2019.github.io/categories/%E5%89%8D%E7%AB%AF/"},{"name":"JavaScript","slug":"前端/JavaScript","permalink":"https://lin2019.github.io/categories/%E5%89%8D%E7%AB%AF/JavaScript/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://lin2019.github.io/tags/JavaScript/"},{"name":"RegExp","slug":"RegExp","permalink":"https://lin2019.github.io/tags/RegExp/"}]},{"title":"git命令一览","slug":"git命令一览","date":"2020-06-02T16:11:29.000Z","updated":"2020-06-07T09:27:10.557Z","comments":true,"path":"2020/06/03/git命令一览/","link":"","permalink":"https://lin2019.github.io/2020/06/03/git%E5%91%BD%E4%BB%A4%E4%B8%80%E8%A7%88/","excerpt":"","text":"1、git初始化1git init2、添加到暂存区1234&lt;!-- 单个文件提交 --&gt;git add &lt;file&gt; &lt;!-- 所有提交 --&gt;git add .3、添加到本地仓库1git commit -m &quot;提交信息&quot;4、查看仓库状态1git status5、查看历史123456&lt;!-- 查看提交记录 --&gt;git log --pretty&#x3D;oneline&lt;!-- 查看命令记录 --&gt;git reflog&lt;!-- 查看文件修改 --&gt;git diff6、分支管理123456789101112131415161718&lt;!-- 查看本地分支 --&gt;git branch&lt;!-- 查看远程和本地所有分支 --&gt;git branch -a&lt;!-- 新建分支 --&gt;git branch &lt;branchname&gt;&lt;!-- 切换分支 --&gt;git checkout &lt;branchname&gt;git switch &lt;branchname&gt;&lt;!-- 新建并切换分支 --&gt;git checkout -b &lt;branchname&gt;git switch -c &lt;branchname&gt;&lt;!-- 检出远程分支，创建本地分支 --&gt;git checkout -b &lt;branchname&gt; origin&#x2F;&lt;branchname&gt;&lt;!-- 删除本地分支 --&gt;git branch -d &lt;branchname&gt;&lt;!-- 删除远程分支 --&gt;git push origin --delete &lt;branchname&gt;7、本地、远程代码的拉取和提交123456789101112&lt;!-- 拉取远程分支到当前分支 --&gt;git pull origin &lt;remotename&gt;&lt;!-- 拉取远程指定分支 --&gt;git pull origin &lt;remotename&gt;:&lt;localname&gt;&lt;!-- 本地分支与远程分支已关联，拉取 --&gt;git pull&lt;!-- 提交到远程master分支 --&gt;git push origin master&lt;!-- 本地分支与远程分支已关联，提交 --&gt;git push&lt;!-- 提交到远程指定分支 --&gt;git push origin &lt;本地分支名称&gt;:&lt;远程分支名称&gt;8、存储本地代码12345678&lt;!-- 保存存储代码 --&gt;git stash save &quot;提示信息&quot;&lt;!-- 查看存储列表 --&gt;git stash list&lt;!-- 恢复存储代码并删除存储 --&gt;git stash pop&lt;!-- 删除所有存储 --&gt;git stash clear9、版本回退123456&lt;!-- 回退上一次提交 --&gt;git reset --hard HEAD^&lt;!-- 回退上3次提交 --&gt;git reset --hard HEAD~3&lt;!-- 回退某一个版本提交 --&gt;git reset --hard commitId10、撤销删除12345678&lt;!-- 撤销回退上一次commit或者add --&gt;git checkout -- filegit reset HEAD &lt;file&gt;&lt;!-- 手动删除，还需删除版本库对应文件，并commit --&gt;git rm &lt;file&gt;git commit -m &quot;delete&quot;&lt;!-- 误删时，只要版本存在就可以恢复 --&gt;git checkout --&lt;file&gt;11、合并分支1git merge &lt;branchname&gt;12、关联分支1git branch --set-upstream-to &lt;branch-name&gt; origin&#x2F;&lt;branch-name&gt;13、标签12345678910111213&lt;!-- 创建标签 --&gt;git tag v1.0&lt;!-- 查看所有标签 --&gt;git tag&lt;!-- 查看标签信息 --&gt;git show v1.0&lt;!-- 删除标签 --&gt;git tag -d v1.0&lt;!-- 推送标签到远程，某一个，所有 --&gt;git push origin v1.0git push origin --tags&lt;!-- 删除远程标签 --&gt;git push origin :refs&#x2F;tags&#x2F;&lt;tagname&gt;","categories":[{"name":"工具","slug":"工具","permalink":"https://lin2019.github.io/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Git","slug":"Git","permalink":"https://lin2019.github.io/tags/Git/"}]},{"title":"Markdown语法一览","slug":"Markdown语法一览","date":"2020-05-31T09:08:14.000Z","updated":"2020-06-07T09:29:44.059Z","comments":true,"path":"2020/05/31/Markdown语法一览/","link":"","permalink":"https://lin2019.github.io/2020/05/31/Markdown%E8%AF%AD%E6%B3%95%E4%B8%80%E8%A7%88/","excerpt":"","text":"&nbsp;&nbsp;Markdown作为轻量级标记语言，使用易读易写的标记语言编写文档，对于图片、列表、表格、代码、数学公式等都完美支持，不仅如此，还可以使用一些HTML标签进行编写。对此，Markdown深受人们喜爱，越来越多的公司、博客都广泛使用其作为文档、博文的撰写，例如GitHub的readme.md、掘金简书等各类博客网站，因此，掌握其语法对于日常的文档阅读和文章撰写都有帮助，入门Markdown无需多难，记住其日常使用的一些语法即可！1、标题123# 标题H1## 标题H2### 标题H32、字体1234567*斜体* 或 _斜体_**粗体** 或 __粗体__***粗斜体*** 或 ___粗斜体___~~删除线~~&lt;u&gt;下划线&lt;&#x2F;u&gt;下标：X&lt;sub&gt;2&lt;&#x2F;sub&gt;上标: O&lt;sup&gt;2&lt;&#x2F;sup&gt;3、引用1&gt; 引用文本4、图片和链接1234[链接名字](链接地址) 或 [链接名字][id]![图片名字](图片链接) 或 ![图片名字][id][id]: 链接地址5、分割线123&lt;!-- 三个_或者*以上 --&gt;______******6、列表123456789&lt;!-- 无序列表，使用-、*、+一种即可 --&gt;- 1- 2- 3 - 3.1&lt;!-- 有序列表，使用数字 --&gt;1. 12. 2 2.17、表格1234&lt;!-- 其中:代表文字居中方向 --&gt;| 表头 | 表头 | 表头 || :--- | :---: | ---: | | 单元格 | 单元格 | 单元格 |8、代码12&lt;!-- 使用 &#96;代码&#96; 或者--&gt;&lt;!-- &#96;&#96;&#96; 代码块 &#96;&#96;&#96; --&gt;8、特殊符号1&amp;copy; &amp; &lt; &gt;9、Emoji表情123:smile::angry::joy:10、html代码和其他12345&lt;img src&#x3D;&quot;url&quot; &#x2F;&gt;&lt;center&gt;文字居中&lt;&#x2F;center&gt;&amp;nbsp;空格\\* 反斜杠显示*号- [x] 勾选框&nbsp;&nbsp;以上就是最常见的Markdown的语法和格式，当然有些并非原生所支持的,不过掌握其基本的语法就可以了，如果你想继续深入学习Markdown，可以参考这里的解释。","categories":[{"name":"工具","slug":"工具","permalink":"https://lin2019.github.io/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"Markdown","slug":"Markdown","permalink":"https://lin2019.github.io/tags/Markdown/"}]},{"title":"Hello hexo","slug":"hello-hexo","date":"2020-05-30T11:20:50.491Z","updated":"2020-06-07T09:29:44.059Z","comments":true,"path":"2020/05/30/hello-hexo/","link":"","permalink":"https://lin2019.github.io/2020/05/30/hello-hexo/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.Quick StartCreate a new post1$ hexo new \"My New Post\"More info: WritingRun server1$ hexo serverMore info: ServerGenerate static files1$ hexo generateMore info: GeneratingDeploy to remote sites1$ hexo deployMore info: Deployment","categories":[{"name":"hexo","slug":"hexo","permalink":"https://lin2019.github.io/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://lin2019.github.io/tags/hexo/"}]}],"categories":[{"name":"前端","slug":"前端","permalink":"https://lin2019.github.io/categories/%E5%89%8D%E7%AB%AF/"},{"name":"JavaScript","slug":"前端/JavaScript","permalink":"https://lin2019.github.io/categories/%E5%89%8D%E7%AB%AF/JavaScript/"},{"name":"工具","slug":"工具","permalink":"https://lin2019.github.io/categories/%E5%B7%A5%E5%85%B7/"},{"name":"hexo","slug":"hexo","permalink":"https://lin2019.github.io/categories/hexo/"}],"tags":[{"name":"JavaScript","slug":"JavaScript","permalink":"https://lin2019.github.io/tags/JavaScript/"},{"name":"RegExp","slug":"RegExp","permalink":"https://lin2019.github.io/tags/RegExp/"},{"name":"Git","slug":"Git","permalink":"https://lin2019.github.io/tags/Git/"},{"name":"Markdown","slug":"Markdown","permalink":"https://lin2019.github.io/tags/Markdown/"},{"name":"hexo","slug":"hexo","permalink":"https://lin2019.github.io/tags/hexo/"}]}